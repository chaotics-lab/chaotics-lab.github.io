{
  "title": "Autonomous Robot (ECECUP)",
  "date": "2022-05-20",
  "titleColor": "#FFFFFF",
  "description": "Built a fully autonomous robot from scratch with computer vision, state machine and graph-based pathfinding.",
  "imageUrl": "/img/ececup",
  "logoUrl": "/img/ececup/logo.png",
  "themeColor": "#de2900",
  "logoBackgroundColor": "#FFFFFF",
  "demoUrl": "https://www.instagram.com/sylv_1_le_robot/",
  "category": [
    "embedded-systems",
    "robotics",
    "sp"
  ],
  "tags": [
    "OpenCV2",
    "C++",
    "ESP32",
    "AJAX",
    "MQTT"
  ],
  "type": "Academic Project",
  "id": "autonomous-robot-competition",
  "markdown": "## Overview\n\n**Sylv_1** is a competition-grade autonomous robot built from scratch for the ECE-CUP engineering competition, where two robots face off in 90-second matches to collect and stack containers on craters for points. Led a 4-person team (Squad 1084) to design and implement a complete robotic system with **web-based teleoperation**, **3D-printed mechanical components**, and **real-time embedded control** — transforming a basic parts kit into a functional competition robot.\n\n**Competition Objective:** Navigate a 2m×3m arena, collect 30g containers (2cm×4cm), stack them on scoring craters (higher value = farther distance), capture opponent towers by topping them, and automatically raise a flag after 90 seconds for bonus points.\n\n**Key Achievement:** Successfully competed in 3 ECE-CUP tournaments, demonstrating reliable autonomous operation under time pressure and adversarial conditions.\n\n## Technical Approach\n\n### System Architecture\n\n**Hardware Stack:**\n- **Microcontroller:** ESP8266 (ESP-12E) with Motor Shield for extended I/O\n- **Actuators:** 2× DC motors (6.5cm wheels), 2× SG90 servomotors (gripper + flag)\n- **Power:** 6V Powerbank (USB rechargeable) with 90s+ runtime\n- **Chassis:** Custom dual-layer 14cm transparent plastic discs with 3-point contact (2 driven wheels + 2 passive casters)\n- **Weight:** <2kg (competition limit), fits 20cm×20cm starting box\n\n**Software Stack:**\n- **Embedded:** Arduino C++ with ESP8266 WiFi libraries\n- **Interface:** HTML5/CSS/JavaScript web server hosted directly on ESP8266\n- **Communication:** AJAX for real-time joystick/button state transmission\n- **Control:** PWM motor control (0-1023 range), servo library for precise gripper positioning\n\n### Module Breakdown\n\n**1. Teleoperation Module (Web-Based Remote Control)**\n\nReplaced traditional RF remotes with a **WiFi-hosted web interface**:\n\n```cpp\n// ESP8266 initializes as WiFi client\nESP8266WebServer server(80);  // Local IP server\nserver.on(\"/args\", ArgsPage);  // AJAX endpoint for joystick data\n```\n\n**Key Features:**\n- Real-time joystick input (X/Y coordinates) via touchscreen or mouse\n- <10ms latency for responsive control in competition\n- Web page includes gripper toggle button + visual feedback\n- Connection via private WiFi network (SSID/password hardcoded for reliability)\n\n**2. Propulsion Module (Differential Drive System)**\n\n**Movement Algorithm:**\n- Joystick space divided into 8 directional zones (forward, back, rotate left/right, diagonal turns)\n- Variable speed constants: `vitesseMax=900` for straight motion, `rotation=750` for turns (precision vs speed tradeoff)\n- Motor direction control via `digitalWrite(pin, HIGH/LOW)` to reverse polarity without H-bridge hardware\n\n```cpp\n// Example: Forward-right turn\nif(y>50 && x>50) {\n    analogWrite(VG, vitesseMax);  // Left motor full speed\n    analogWrite(VD, vitesseMin);  // Right motor reduced\n    digitalWrite(RG, LOW);  // Both forward\n    digitalWrite(RD, LOW);\n}\n```\n\n**Challenge Solved:** Motors mounted inverted to save chassis space — LOW state = forward rotation due to physical orientation.\n\n**3. Gripper Module (3D-Printed Gear Mechanism)**\n\n**Mechanical Design:**\n- Dual-jaw gripper actuated by single SG90 servomotor (23mm×12mm×29mm, 9g)\n- Custom gear train (designed in Tinkercad) mirrors jaw movement symmetrically\n- Components: Base (47×61mm), dual gears (63×18mm), jaw teeth (90×24mm), supports\n- Material: **PETG** (vs PLA) for corrosion resistance, rigidity, and durability\n\n**Print Specifications:**\n- Printer: Creality CR-10S Pro / Ender 3\n- Layer height: 0.2mm, infill optimized for strength/weight balance\n- Post-processing: Smoothed gear teeth to reduce friction\n\n**Control Logic:**\n```cpp\nvoid pinceFermee() { pinceGrip.write(0); }    // Closed position\nvoid pinceOuverte() { pinceGrip.write(90); }  // Open position\n```\n- Web interface button toggles boolean → servo position\n- State feedback sent back to interface for confirmation\n\n**4. Flag Module (Auto-Deploy System)**\n\n**Competition Rule Compliance:**\n- 13cm wooden mast with 7×4cm team flag\n- SG90 servo rotates from 0° (stowed) → 90° (raised) at t=90s\n- Automated sequence triggered by onboard timer:\n\n```cpp\nif(chronometre >= 90000) {  // 90 seconds in ms\n    leverDrapeau();  // Raise flag\n    analogWrite(VG, 0);  // Stop motors\n    analogWrite(VD, 0);\n}\n```\n\n- **Visual indicator:** LED on pin D3 illuminates when flag deployed\n- **Bonus feature:** Flag oscillates ±10° after raising for visibility\n\n**5. Support & Power Modules**\n\n- **Chassis:** Dual 2mm acrylic discs with custom cutouts for component mounting\n- **Stability:** Tricycle configuration with rear stabilizing caster\n- **Power Distribution:** 5V from Powerbank → ESP8266 → Motor Shield → all peripherals\n- **Thermal Management:** Passive cooling via perforated chassis design\n\n## Challenges & Solutions\n\n| Challenge | Solution |\n|-----------|----------|\n| **Limited GPIO pins** on ESP8266 | Motor Shield expansion board added 4 PWM outputs + motor driver channels |\n| **Motor direction without H-bridge** | Exploited `digitalWrite()` polarity control + physical motor inversion |\n| **WiFi reliability** in competition | Hardcoded network credentials; implemented connection retry logic |\n| **Gripper precision** (PETG warping) | Calibrated servo angles empirically; rounded gear teeth to reduce binding |\n| **90s timer sync** with match start | Timer triggers on **first joystick input** (not power-on) to account for setup delays |\n| **Weight distribution** (top-heavy flag) | Lowered battery placement; dual-caster rear prevents tipping on acceleration |\n| **3D print material choice** | PETG over PLA for +30% rigidity, temperature resistance (50°C → 80°C glass transition) |\n\n## Results / Impact\n\n**Competition Performance:**\n- ✅ Competed in **3 ECE-CUP tournaments** (TD-level competitions)\n- ✅ Successfully collected/stacked containers under 90s time limit\n- ✅ Automated flag deployment achieved 100% reliability\n- ✅ Zero disqualifications (all weight/size/safety requirements met)\n\n**Technical Metrics:**\n- **Teleoperation latency:** <10ms (WiFi @ 2.4GHz)\n- **Gripper cycle time:** ~1.5s (open → close → lift)\n- **Battery life:** 120+ minutes continuous operation\n- **Build cost:** ~€50 (motors, servos, filament, ESP8266 kit)\n\n**Engineering Achievements:**\n- Designed complete **electromechanical system** from requirements to deployment\n- Applied **embedded systems** principles (PWM control, ISR timers, state machines)\n- Demonstrated **rapid prototyping** with 3D printing and iterative testing\n- Gained hands-on experience with **WiFi protocols** (HTTP server, AJAX polling)\n\n**Team Leadership:**\n- Coordinated 4-person squad with defined roles:\n  - **Project Lead** (Léopold Rombaut): System integration, gripper design\n  - **Developer** (Tristan Querton): Propulsion algorithms, software architecture\n  - **Communications** (Norith Ung): Flag module, documentation\n  - **Creative Director** (Victor Ratti): Web interface, teleoperation UX\n\n## References\n\n- [Instagram: @sylv_1_le_robot](https://www.instagram.com/sylv_1_le_robot/) (competition footage)\n- **Competition Framework:** ECE Paris I1CUP20 Specifications (2020-2021)\n- **Technical References:**\n  - [Gammatronics: ESP8266 Web Control Tutorial](https://www.youtube.com/watch?v=0UqHO-rF9uk)\n  - [Yisaryan: Robot Gripper Design](https://www.thingiverse.com/thing:715525) (adapted)\n  - [ESP8266 Motor Shield Manual](https://cdn.hackaday.io/files/8856378895104/user-mannual-for-esp-12e-pdf)\n- **Material Science:** PETG vs PLA comparison ([ZMorph, 2020](https://medium.com/@ZMorph/petg-vs-pla-filaments-comparison-dfa813403ea2))\n\n**Technologies:** ESP8266, C++, Arduino, PWM Control, AJAX, HTML5/CSS/JavaScript, 3D Printing (PETG), Servo Motors, DC Motors, WiFi Protocols, Embedded Systems, Real-Time Control"
}